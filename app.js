// Generated by CoffeeScript 1.10.0
(function() {
  var api, app, auth, bodyParser, express, express_jwt, jwt_secret, logger, path, routes;

  express = require('express');

  path = require('path');

  logger = require('morgan');

  bodyParser = require('body-parser');

  express_jwt = require('express-jwt');

  jwt_secret = 'this is a bad secret';

  routes = require('./routes/index');

  auth = require('./routes/auth');

  api = require('./routes/api');

  app = express();

  app.use(logger('dev'));

  app.use(bodyParser.json());

  app.use(bodyParser.urlencoded({
    extended: false
  }));

  app.set('x-powered-by', false);

  app.use(express_jwt({
    secret: jwt_secret
  }).unless({
    path: ['/register', '/login']
  }));

  app.use('/', auth);

  app.use('/api', api);

  app.use(function(err, req, res, next) {
    if (err.name === 'UnauthorizedError') {
      return res.status(401).json({
        msg: 'UnauthorizedError'
      }).end();
    }
  });

  app.use(function(req, res, next) {
    var err;
    err = new Error('Not Found');
    err.status = 404;
    return next(err);
  });

  if (app.get('env') === 'development') {
    app.use(function(err, req, res, next) {
      res.status(err.status || 500);
      return res.render('error', {
        message: err.message,
        error: err
      });
    });
  }

  app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    return res.json({
      error: err.massage
    });
  });

  module.exports = app;

}).call(this);
